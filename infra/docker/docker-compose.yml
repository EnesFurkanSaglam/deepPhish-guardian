version: '3.8'

services:
  auth-service:
    build: ../../backend/auth-service
    container_name: auth_service
    ports:
      - "5000:5000"
    environment:
      - SECRET_KEY=mysecretkey
      - DATABASE_URL=postgresql://admin:secret123@db:5432/auth_db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14
    container_name: db_service
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret123
      - POSTGRES_DB=auth_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d auth_db"]
      interval: 10s
      retries: 5
      timeout: 5s

  phishing-service:
    build: ../../backend/phishing-service
    container_name: phishing_service
    ports:
      - "6000:6000"
    environment:
      - SECRET_KEY=mysecretkey
    depends_on:
      - auth-service

  deepfake-service:
    build: ../../backend/deepfake-service
    container_name: deepfake_service
    ports:
      - "7000:7000"
    environment:
      - SECRET_KEY=mysecretkey
    depends_on:
      - auth-service

  nginx:
    build: ../nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - phishing-service
      - deepfake-service

  suricata:
    build: ../suricata
    container_name: suricata
    network_mode: "host"
    volumes:
      - ../suricata/logs:/var/log/suricata
    privileged: true
    cap_add:
      - NET_ADMIN
      - SYS_NICE

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200 || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  logstash:
    image: docker.elastic.co/logstash/logstash:8.6.2
    container_name: logstash
    volumes:
      - ../logstash/config:/usr/share/logstash/config
      - ../logstash/pipeline:/usr/share/logstash/pipeline
      - ../suricata/logs:/var/log/suricata
    ports:
      - "5044:5044"
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  elasticsearch_data:
